$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module lcd_inst_pkg $end
   $var wire 9 3% CLEAR_DISPLAY [8:0] $end
   $var wire 9 4% RETURN_HOME [8:0] $end
   $var wire 9 5% ENTRY_DIR_RIGHT [8:0] $end
   $var wire 9 6% ENTRY_DIR_LEFT [8:0] $end
   $var wire 9 7% ENTRY_SHIFT_ENABLE [8:0] $end
   $var wire 9 6% ENTRY_SHIFT_DISABLE [8:0] $end
   $var wire 9 8% DISPLAY_ON [8:0] $end
   $var wire 9 9% CURSOR_ON [8:0] $end
   $var wire 9 :% CURSOR_BLINK_ON [8:0] $end
   $var wire 9 ;% DISPLAY_OFF [8:0] $end
   $var wire 9 8% CURSOR_OFF [8:0] $end
   $var wire 9 9% CURSOR_BLINK_OFF [8:0] $end
   $var wire 9 <% DISPLAY_SHIFT_RIGHT [8:0] $end
   $var wire 9 =% DISPLAY_SHIFT_LEFT [8:0] $end
   $var wire 9 >% CURSOR_SHIFT_RIGHT [8:0] $end
   $var wire 9 ?% CURSOR_SHIFT_LEFT [8:0] $end
  $upscope $end
  $scope module image_processor_tb $end
   $var wire 32 %$ NUM_FILTERS [31:0] $end
   $var wire 32 &$ IMAGE_WIDTH [31:0] $end
   $var wire 32 '$ IMAGE_HEIGHT [31:0] $end
   $var wire 32 ($ PIXEL_BITS [31:0] $end
   $var wire 32 %$ KERNEL_SIZE [31:0] $end
   $var wire 32 )$ KERNEL_BITS [31:0] $end
   $var wire 32 *$ ADDR_BITS [31:0] $end
   $var wire 1 z# clk_25_vga $end
   $var wire 1 +$ resend $end
   $var wire 1 ,$ vga_ready $end
   $var wire 12 -$ rddata [11:0] $end
   $var wire 17 # rdaddress [16:0] $end
   $var wire 1 $ vga_start $end
   $var wire 1 % vga_end $end
   $var wire 31 & vga_data [30:0] $end
   $var wire 1 {# clk $end
   $var wire 1 |# next_button $end
   $var wire 1 }# prev_button $end
   $var wire 3 )# filter_number [2:0] $end
   $var wire 1 ~# lcd_reset $end
   $var wire 1 *# address $end
   $var wire 1 +# chipselect $end
   $var wire 1 .$ byteenable $end
   $var wire 1 /$ read $end
   $var wire 1 ,# write $end
   $var wire 1 0$ waitrequest $end
   $var wire 8 1$ readdata [7:0] $end
   $var wire 2 2$ response [1:0] $end
   $var wire 8 -# writedata [7:0] $end
   $var wire 16 !$ audio_pitch [15:0] $end
   $var wire 7 .# curr_kernel[0] [6:0] $end
   $var wire 7 /# curr_kernel[1] [6:0] $end
   $var wire 7 0# curr_kernel[2] [6:0] $end
   $var wire 7 1# curr_kernel[3] [6:0] $end
   $var wire 7 2# curr_kernel[4] [6:0] $end
   $var wire 7 3# curr_kernel[5] [6:0] $end
   $var wire 7 4# curr_kernel[6] [6:0] $end
   $var wire 7 5# curr_kernel[7] [6:0] $end
   $var wire 7 6# curr_kernel[8] [6:0] $end
   $var wire 7 7# curr_kernel[9] [6:0] $end
   $var wire 7 8# curr_kernel[10] [6:0] $end
   $var wire 7 9# curr_kernel[11] [6:0] $end
   $var wire 7 :# curr_kernel[12] [6:0] $end
   $var wire 7 ;# curr_kernel[13] [6:0] $end
   $var wire 7 <# curr_kernel[14] [6:0] $end
   $var wire 7 =# curr_kernel[15] [6:0] $end
   $var wire 7 ># curr_kernel[16] [6:0] $end
   $var wire 7 ?# curr_kernel[17] [6:0] $end
   $var wire 7 @# curr_kernel[18] [6:0] $end
   $var wire 7 A# curr_kernel[19] [6:0] $end
   $var wire 7 B# curr_kernel[20] [6:0] $end
   $var wire 7 C# curr_kernel[21] [6:0] $end
   $var wire 7 D# curr_kernel[22] [6:0] $end
   $var wire 7 E# curr_kernel[23] [6:0] $end
   $var wire 7 F# curr_kernel[24] [6:0] $end
   $var wire 1 G# div_flag $end
   $var wire 6 H# r_mod [5:0] $end
   $var wire 6 I# g_mod [5:0] $end
   $var wire 6 J# b_mod [5:0] $end
   $scope module dut_convolution_filt $end
    $var wire 32 3$ W [31:0] $end
    $var wire 32 4$ W_FRAC [31:0] $end
    $var wire 1 {# clk $end
    $var wire 3 )# filter_number [2:0] $end
    $var wire 16 !$ audio_pitch [15:0] $end
    $var wire 7 .# curr_kernel[0] [6:0] $end
    $var wire 7 /# curr_kernel[1] [6:0] $end
    $var wire 7 0# curr_kernel[2] [6:0] $end
    $var wire 7 1# curr_kernel[3] [6:0] $end
    $var wire 7 2# curr_kernel[4] [6:0] $end
    $var wire 7 3# curr_kernel[5] [6:0] $end
    $var wire 7 4# curr_kernel[6] [6:0] $end
    $var wire 7 5# curr_kernel[7] [6:0] $end
    $var wire 7 6# curr_kernel[8] [6:0] $end
    $var wire 7 7# curr_kernel[9] [6:0] $end
    $var wire 7 8# curr_kernel[10] [6:0] $end
    $var wire 7 9# curr_kernel[11] [6:0] $end
    $var wire 7 :# curr_kernel[12] [6:0] $end
    $var wire 7 ;# curr_kernel[13] [6:0] $end
    $var wire 7 <# curr_kernel[14] [6:0] $end
    $var wire 7 =# curr_kernel[15] [6:0] $end
    $var wire 7 ># curr_kernel[16] [6:0] $end
    $var wire 7 ?# curr_kernel[17] [6:0] $end
    $var wire 7 @# curr_kernel[18] [6:0] $end
    $var wire 7 A# curr_kernel[19] [6:0] $end
    $var wire 7 B# curr_kernel[20] [6:0] $end
    $var wire 7 C# curr_kernel[21] [6:0] $end
    $var wire 7 D# curr_kernel[22] [6:0] $end
    $var wire 7 E# curr_kernel[23] [6:0] $end
    $var wire 7 F# curr_kernel[24] [6:0] $end
    $var wire 3 K# locater [2:0] $end
    $var wire 7 L# temp_kernel[0] [6:0] $end
    $var wire 7 M# temp_kernel[1] [6:0] $end
    $var wire 7 N# temp_kernel[2] [6:0] $end
    $var wire 7 O# temp_kernel[3] [6:0] $end
    $var wire 7 P# temp_kernel[4] [6:0] $end
    $var wire 7 Q# temp_kernel[5] [6:0] $end
    $var wire 7 R# temp_kernel[6] [6:0] $end
    $var wire 7 S# temp_kernel[7] [6:0] $end
    $var wire 7 T# temp_kernel[8] [6:0] $end
    $var wire 7 U# temp_kernel[9] [6:0] $end
    $var wire 7 V# temp_kernel[10] [6:0] $end
    $var wire 7 W# temp_kernel[11] [6:0] $end
    $var wire 7 X# temp_kernel[12] [6:0] $end
    $var wire 7 Y# temp_kernel[13] [6:0] $end
    $var wire 7 Z# temp_kernel[14] [6:0] $end
    $var wire 7 [# temp_kernel[15] [6:0] $end
    $var wire 7 \# temp_kernel[16] [6:0] $end
    $var wire 7 ]# temp_kernel[17] [6:0] $end
    $var wire 7 ^# temp_kernel[18] [6:0] $end
    $var wire 7 _# temp_kernel[19] [6:0] $end
    $var wire 7 `# temp_kernel[20] [6:0] $end
    $var wire 7 a# temp_kernel[21] [6:0] $end
    $var wire 7 b# temp_kernel[22] [6:0] $end
    $var wire 7 c# temp_kernel[23] [6:0] $end
    $var wire 7 d# temp_kernel[24] [6:0] $end
    $scope module determine_kernel $end
     $scope module unnamedblk1 $end
      $var wire 32 e# i [31:0] $end
     $upscope $end
     $scope module unnamedblk2 $end
      $var wire 32 f# i [31:0] $end
     $upscope $end
     $scope module unnamedblk3 $end
      $var wire 32 g# i [31:0] $end
     $upscope $end
    $upscope $end
    $scope module unnamedblk4 $end
     $var wire 32 5$ i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module dut_filter_fsm $end
    $var wire 32 %$ NUM_FILTERS [31:0] $end
    $var wire 1 {# clk $end
    $var wire 1 |# next_button $end
    $var wire 1 }# prev_button $end
    $var wire 3 )# filter_number [2:0] $end
    $var wire 1 ~# lcd_reset $end
    $var wire 1 h# next_button_q $end
    $var wire 1 i# prev_button_q $end
    $var wire 1 "$ next_button_edge $end
    $var wire 1 #$ prev_button_edge $end
    $var wire 4 $$ next_state [3:0] $end
    $var wire 4 j# current_state [3:0] $end
   $upscope $end
   $scope module dut_image_processor $end
    $var wire 32 &$ IMAGE_WIDTH [31:0] $end
    $var wire 32 '$ IMAGE_HEIGHT [31:0] $end
    $var wire 32 ($ PIXEL_BITS [31:0] $end
    $var wire 32 %$ KERNEL_SIZE [31:0] $end
    $var wire 32 )$ KERNEL_BITS [31:0] $end
    $var wire 32 *$ ADDR_BITS [31:0] $end
    $var wire 1 z# clk_25_vga $end
    $var wire 1 +$ resend $end
    $var wire 1 ,$ vga_ready $end
    $var wire 12 -$ rddata [11:0] $end
    $var wire 17 # rdaddress [16:0] $end
    $var wire 1 $ vga_start $end
    $var wire 1 % vga_end $end
    $var wire 31 & vga_data [30:0] $end
    $var wire 6 H# r_mod [5:0] $end
    $var wire 6 I# g_mod [5:0] $end
    $var wire 6 J# b_mod [5:0] $end
    $var wire 1 G# div_flag $end
    $var wire 7 .# curr_kernel[0] [6:0] $end
    $var wire 7 /# curr_kernel[1] [6:0] $end
    $var wire 7 0# curr_kernel[2] [6:0] $end
    $var wire 7 1# curr_kernel[3] [6:0] $end
    $var wire 7 2# curr_kernel[4] [6:0] $end
    $var wire 7 3# curr_kernel[5] [6:0] $end
    $var wire 7 4# curr_kernel[6] [6:0] $end
    $var wire 7 5# curr_kernel[7] [6:0] $end
    $var wire 7 6# curr_kernel[8] [6:0] $end
    $var wire 7 7# curr_kernel[9] [6:0] $end
    $var wire 7 8# curr_kernel[10] [6:0] $end
    $var wire 7 9# curr_kernel[11] [6:0] $end
    $var wire 7 :# curr_kernel[12] [6:0] $end
    $var wire 7 ;# curr_kernel[13] [6:0] $end
    $var wire 7 <# curr_kernel[14] [6:0] $end
    $var wire 7 =# curr_kernel[15] [6:0] $end
    $var wire 7 ># curr_kernel[16] [6:0] $end
    $var wire 7 ?# curr_kernel[17] [6:0] $end
    $var wire 7 @# curr_kernel[18] [6:0] $end
    $var wire 7 A# curr_kernel[19] [6:0] $end
    $var wire 7 B# curr_kernel[20] [6:0] $end
    $var wire 7 C# curr_kernel[21] [6:0] $end
    $var wire 7 D# curr_kernel[22] [6:0] $end
    $var wire 7 E# curr_kernel[23] [6:0] $end
    $var wire 7 F# curr_kernel[24] [6:0] $end
    $var wire 32 ' col [31:0] $end
    $var wire 32 ( col_old [31:0] $end
    $var wire 32 ) row [31:0] $end
    $var wire 32 * row_old [31:0] $end
    $var wire 16 + row_address [15:0] $end
    $var wire 7 , kernel_values[0] [6:0] $end
    $var wire 7 - kernel_values[1] [6:0] $end
    $var wire 7 . kernel_values[2] [6:0] $end
    $var wire 7 / kernel_values[3] [6:0] $end
    $var wire 7 0 kernel_values[4] [6:0] $end
    $var wire 7 1 kernel_values[5] [6:0] $end
    $var wire 7 2 kernel_values[6] [6:0] $end
    $var wire 7 3 kernel_values[7] [6:0] $end
    $var wire 7 4 kernel_values[8] [6:0] $end
    $var wire 7 5 kernel_values[9] [6:0] $end
    $var wire 7 6 kernel_values[10] [6:0] $end
    $var wire 7 7 kernel_values[11] [6:0] $end
    $var wire 7 8 kernel_values[12] [6:0] $end
    $var wire 7 9 kernel_values[13] [6:0] $end
    $var wire 7 : kernel_values[14] [6:0] $end
    $var wire 7 ; kernel_values[15] [6:0] $end
    $var wire 7 < kernel_values[16] [6:0] $end
    $var wire 7 = kernel_values[17] [6:0] $end
    $var wire 7 > kernel_values[18] [6:0] $end
    $var wire 7 ? kernel_values[19] [6:0] $end
    $var wire 7 @ kernel_values[20] [6:0] $end
    $var wire 7 A kernel_values[21] [6:0] $end
    $var wire 7 B kernel_values[22] [6:0] $end
    $var wire 7 C kernel_values[23] [6:0] $end
    $var wire 7 D kernel_values[24] [6:0] $end
    $var wire 12 E kernel_sum [11:0] $end
    $var wire 12 F processed_data [11:0] $end
    $var wire 12 6$ r_products[0] [11:0] $end
    $var wire 12 7$ r_products[1] [11:0] $end
    $var wire 12 8$ r_products[2] [11:0] $end
    $var wire 12 9$ r_products[3] [11:0] $end
    $var wire 12 :$ r_products[4] [11:0] $end
    $var wire 12 ;$ r_products[5] [11:0] $end
    $var wire 12 <$ r_products[6] [11:0] $end
    $var wire 12 =$ r_products[7] [11:0] $end
    $var wire 12 >$ r_products[8] [11:0] $end
    $var wire 12 ?$ r_products[9] [11:0] $end
    $var wire 12 @$ r_products[10] [11:0] $end
    $var wire 12 A$ r_products[11] [11:0] $end
    $var wire 12 B$ r_products[12] [11:0] $end
    $var wire 12 C$ r_products[13] [11:0] $end
    $var wire 12 D$ r_products[14] [11:0] $end
    $var wire 12 E$ r_products[15] [11:0] $end
    $var wire 12 F$ r_products[16] [11:0] $end
    $var wire 12 G$ r_products[17] [11:0] $end
    $var wire 12 H$ r_products[18] [11:0] $end
    $var wire 12 I$ r_products[19] [11:0] $end
    $var wire 12 J$ r_products[20] [11:0] $end
    $var wire 12 K$ r_products[21] [11:0] $end
    $var wire 12 L$ r_products[22] [11:0] $end
    $var wire 12 M$ r_products[23] [11:0] $end
    $var wire 12 N$ r_products[24] [11:0] $end
    $var wire 12 O$ g_products[0] [11:0] $end
    $var wire 12 P$ g_products[1] [11:0] $end
    $var wire 12 Q$ g_products[2] [11:0] $end
    $var wire 12 R$ g_products[3] [11:0] $end
    $var wire 12 S$ g_products[4] [11:0] $end
    $var wire 12 T$ g_products[5] [11:0] $end
    $var wire 12 U$ g_products[6] [11:0] $end
    $var wire 12 V$ g_products[7] [11:0] $end
    $var wire 12 W$ g_products[8] [11:0] $end
    $var wire 12 X$ g_products[9] [11:0] $end
    $var wire 12 Y$ g_products[10] [11:0] $end
    $var wire 12 Z$ g_products[11] [11:0] $end
    $var wire 12 [$ g_products[12] [11:0] $end
    $var wire 12 \$ g_products[13] [11:0] $end
    $var wire 12 ]$ g_products[14] [11:0] $end
    $var wire 12 ^$ g_products[15] [11:0] $end
    $var wire 12 _$ g_products[16] [11:0] $end
    $var wire 12 `$ g_products[17] [11:0] $end
    $var wire 12 a$ g_products[18] [11:0] $end
    $var wire 12 b$ g_products[19] [11:0] $end
    $var wire 12 c$ g_products[20] [11:0] $end
    $var wire 12 d$ g_products[21] [11:0] $end
    $var wire 12 e$ g_products[22] [11:0] $end
    $var wire 12 f$ g_products[23] [11:0] $end
    $var wire 12 g$ g_products[24] [11:0] $end
    $var wire 12 h$ b_products[0] [11:0] $end
    $var wire 12 i$ b_products[1] [11:0] $end
    $var wire 12 j$ b_products[2] [11:0] $end
    $var wire 12 k$ b_products[3] [11:0] $end
    $var wire 12 l$ b_products[4] [11:0] $end
    $var wire 12 m$ b_products[5] [11:0] $end
    $var wire 12 n$ b_products[6] [11:0] $end
    $var wire 12 o$ b_products[7] [11:0] $end
    $var wire 12 p$ b_products[8] [11:0] $end
    $var wire 12 q$ b_products[9] [11:0] $end
    $var wire 12 r$ b_products[10] [11:0] $end
    $var wire 12 s$ b_products[11] [11:0] $end
    $var wire 12 t$ b_products[12] [11:0] $end
    $var wire 12 u$ b_products[13] [11:0] $end
    $var wire 12 v$ b_products[14] [11:0] $end
    $var wire 12 w$ b_products[15] [11:0] $end
    $var wire 12 x$ b_products[16] [11:0] $end
    $var wire 12 y$ b_products[17] [11:0] $end
    $var wire 12 z$ b_products[18] [11:0] $end
    $var wire 12 {$ b_products[19] [11:0] $end
    $var wire 12 |$ b_products[20] [11:0] $end
    $var wire 12 }$ b_products[21] [11:0] $end
    $var wire 12 ~$ b_products[22] [11:0] $end
    $var wire 12 !% b_products[23] [11:0] $end
    $var wire 12 "% b_products[24] [11:0] $end
    $var wire 5 G r_row_l[0] [4:0] $end
    $var wire 5 H r_row_l[1] [4:0] $end
    $var wire 5 I r_row_l[2] [4:0] $end
    $var wire 5 J r_row_l[3] [4:0] $end
    $var wire 5 K r_row_l[4] [4:0] $end
    $var wire 5 L r_row_l[5] [4:0] $end
    $var wire 5 M r_row_l[6] [4:0] $end
    $var wire 5 N r_row_l[7] [4:0] $end
    $var wire 5 O r_row_l[8] [4:0] $end
    $var wire 5 P r_row_l[9] [4:0] $end
    $var wire 5 Q r_row_l[10] [4:0] $end
    $var wire 5 R r_row_l[11] [4:0] $end
    $var wire 5 S r_row_l[12] [4:0] $end
    $var wire 5 T r_row_l[13] [4:0] $end
    $var wire 5 U r_row_l[14] [4:0] $end
    $var wire 5 V r_row_l[15] [4:0] $end
    $var wire 5 W r_row_l[16] [4:0] $end
    $var wire 5 X r_row_l[17] [4:0] $end
    $var wire 5 Y r_row_l[18] [4:0] $end
    $var wire 5 Z r_row_l[19] [4:0] $end
    $var wire 5 [ r_row_l[20] [4:0] $end
    $var wire 5 \ r_row_l[21] [4:0] $end
    $var wire 5 ] r_row_l[22] [4:0] $end
    $var wire 5 ^ r_row_l[23] [4:0] $end
    $var wire 5 _ r_row_l[24] [4:0] $end
    $var wire 5 ` g_row_l[0] [4:0] $end
    $var wire 5 a g_row_l[1] [4:0] $end
    $var wire 5 b g_row_l[2] [4:0] $end
    $var wire 5 c g_row_l[3] [4:0] $end
    $var wire 5 d g_row_l[4] [4:0] $end
    $var wire 5 e g_row_l[5] [4:0] $end
    $var wire 5 f g_row_l[6] [4:0] $end
    $var wire 5 g g_row_l[7] [4:0] $end
    $var wire 5 h g_row_l[8] [4:0] $end
    $var wire 5 i g_row_l[9] [4:0] $end
    $var wire 5 j g_row_l[10] [4:0] $end
    $var wire 5 k g_row_l[11] [4:0] $end
    $var wire 5 l g_row_l[12] [4:0] $end
    $var wire 5 m g_row_l[13] [4:0] $end
    $var wire 5 n g_row_l[14] [4:0] $end
    $var wire 5 o g_row_l[15] [4:0] $end
    $var wire 5 p g_row_l[16] [4:0] $end
    $var wire 5 q g_row_l[17] [4:0] $end
    $var wire 5 r g_row_l[18] [4:0] $end
    $var wire 5 s g_row_l[19] [4:0] $end
    $var wire 5 t g_row_l[20] [4:0] $end
    $var wire 5 u g_row_l[21] [4:0] $end
    $var wire 5 v g_row_l[22] [4:0] $end
    $var wire 5 w g_row_l[23] [4:0] $end
    $var wire 5 x g_row_l[24] [4:0] $end
    $var wire 5 y b_row_l[0] [4:0] $end
    $var wire 5 z b_row_l[1] [4:0] $end
    $var wire 5 { b_row_l[2] [4:0] $end
    $var wire 5 | b_row_l[3] [4:0] $end
    $var wire 5 } b_row_l[4] [4:0] $end
    $var wire 5 ~ b_row_l[5] [4:0] $end
    $var wire 5 !! b_row_l[6] [4:0] $end
    $var wire 5 "! b_row_l[7] [4:0] $end
    $var wire 5 #! b_row_l[8] [4:0] $end
    $var wire 5 $! b_row_l[9] [4:0] $end
    $var wire 5 %! b_row_l[10] [4:0] $end
    $var wire 5 &! b_row_l[11] [4:0] $end
    $var wire 5 '! b_row_l[12] [4:0] $end
    $var wire 5 (! b_row_l[13] [4:0] $end
    $var wire 5 )! b_row_l[14] [4:0] $end
    $var wire 5 *! b_row_l[15] [4:0] $end
    $var wire 5 +! b_row_l[16] [4:0] $end
    $var wire 5 ,! b_row_l[17] [4:0] $end
    $var wire 5 -! b_row_l[18] [4:0] $end
    $var wire 5 .! b_row_l[19] [4:0] $end
    $var wire 5 /! b_row_l[20] [4:0] $end
    $var wire 5 0! b_row_l[21] [4:0] $end
    $var wire 5 1! b_row_l[22] [4:0] $end
    $var wire 5 2! b_row_l[23] [4:0] $end
    $var wire 5 3! b_row_l[24] [4:0] $end
    $var wire 12 4! r_total_indexed[0] [11:0] $end
    $var wire 12 5! r_total_indexed[1] [11:0] $end
    $var wire 12 6! r_total_indexed[2] [11:0] $end
    $var wire 12 7! r_total_indexed[3] [11:0] $end
    $var wire 12 8! r_total_indexed[4] [11:0] $end
    $var wire 12 9! r_total_indexed[5] [11:0] $end
    $var wire 12 :! r_total_indexed[6] [11:0] $end
    $var wire 12 ;! r_total_indexed[7] [11:0] $end
    $var wire 12 <! r_total_indexed[8] [11:0] $end
    $var wire 12 =! r_total_indexed[9] [11:0] $end
    $var wire 12 >! r_total_indexed[10] [11:0] $end
    $var wire 12 ?! r_total_indexed[11] [11:0] $end
    $var wire 12 @! r_total_indexed[12] [11:0] $end
    $var wire 12 A! r_total_indexed[13] [11:0] $end
    $var wire 12 B! r_total_indexed[14] [11:0] $end
    $var wire 12 C! r_total_indexed[15] [11:0] $end
    $var wire 12 D! r_total_indexed[16] [11:0] $end
    $var wire 12 E! r_total_indexed[17] [11:0] $end
    $var wire 12 F! r_total_indexed[18] [11:0] $end
    $var wire 12 G! r_total_indexed[19] [11:0] $end
    $var wire 12 H! r_total_indexed[20] [11:0] $end
    $var wire 12 I! r_total_indexed[21] [11:0] $end
    $var wire 12 J! r_total_indexed[22] [11:0] $end
    $var wire 12 K! r_total_indexed[23] [11:0] $end
    $var wire 12 L! r_total_indexed[24] [11:0] $end
    $var wire 12 M! g_total_indexed[0] [11:0] $end
    $var wire 12 N! g_total_indexed[1] [11:0] $end
    $var wire 12 O! g_total_indexed[2] [11:0] $end
    $var wire 12 P! g_total_indexed[3] [11:0] $end
    $var wire 12 Q! g_total_indexed[4] [11:0] $end
    $var wire 12 R! g_total_indexed[5] [11:0] $end
    $var wire 12 S! g_total_indexed[6] [11:0] $end
    $var wire 12 T! g_total_indexed[7] [11:0] $end
    $var wire 12 U! g_total_indexed[8] [11:0] $end
    $var wire 12 V! g_total_indexed[9] [11:0] $end
    $var wire 12 W! g_total_indexed[10] [11:0] $end
    $var wire 12 X! g_total_indexed[11] [11:0] $end
    $var wire 12 Y! g_total_indexed[12] [11:0] $end
    $var wire 12 Z! g_total_indexed[13] [11:0] $end
    $var wire 12 [! g_total_indexed[14] [11:0] $end
    $var wire 12 \! g_total_indexed[15] [11:0] $end
    $var wire 12 ]! g_total_indexed[16] [11:0] $end
    $var wire 12 ^! g_total_indexed[17] [11:0] $end
    $var wire 12 _! g_total_indexed[18] [11:0] $end
    $var wire 12 `! g_total_indexed[19] [11:0] $end
    $var wire 12 a! g_total_indexed[20] [11:0] $end
    $var wire 12 b! g_total_indexed[21] [11:0] $end
    $var wire 12 c! g_total_indexed[22] [11:0] $end
    $var wire 12 d! g_total_indexed[23] [11:0] $end
    $var wire 12 e! g_total_indexed[24] [11:0] $end
    $var wire 12 f! b_total_indexed[0] [11:0] $end
    $var wire 12 g! b_total_indexed[1] [11:0] $end
    $var wire 12 h! b_total_indexed[2] [11:0] $end
    $var wire 12 i! b_total_indexed[3] [11:0] $end
    $var wire 12 j! b_total_indexed[4] [11:0] $end
    $var wire 12 k! b_total_indexed[5] [11:0] $end
    $var wire 12 l! b_total_indexed[6] [11:0] $end
    $var wire 12 m! b_total_indexed[7] [11:0] $end
    $var wire 12 n! b_total_indexed[8] [11:0] $end
    $var wire 12 o! b_total_indexed[9] [11:0] $end
    $var wire 12 p! b_total_indexed[10] [11:0] $end
    $var wire 12 q! b_total_indexed[11] [11:0] $end
    $var wire 12 r! b_total_indexed[12] [11:0] $end
    $var wire 12 s! b_total_indexed[13] [11:0] $end
    $var wire 12 t! b_total_indexed[14] [11:0] $end
    $var wire 12 u! b_total_indexed[15] [11:0] $end
    $var wire 12 v! b_total_indexed[16] [11:0] $end
    $var wire 12 w! b_total_indexed[17] [11:0] $end
    $var wire 12 x! b_total_indexed[18] [11:0] $end
    $var wire 12 y! b_total_indexed[19] [11:0] $end
    $var wire 12 z! b_total_indexed[20] [11:0] $end
    $var wire 12 {! b_total_indexed[21] [11:0] $end
    $var wire 12 |! b_total_indexed[22] [11:0] $end
    $var wire 12 }! b_total_indexed[23] [11:0] $end
    $var wire 12 ~! b_total_indexed[24] [11:0] $end
    $var wire 13 !" r_total_i2[0] [12:0] $end
    $var wire 13 "" r_total_i2[1] [12:0] $end
    $var wire 13 #" r_total_i2[2] [12:0] $end
    $var wire 13 $" r_total_i2[3] [12:0] $end
    $var wire 13 %" r_total_i2[4] [12:0] $end
    $var wire 13 &" r_total_i2[5] [12:0] $end
    $var wire 13 '" r_total_i2[6] [12:0] $end
    $var wire 13 (" r_total_i2[7] [12:0] $end
    $var wire 13 )" r_total_i2[8] [12:0] $end
    $var wire 13 *" r_total_i2[9] [12:0] $end
    $var wire 13 +" r_total_i2[10] [12:0] $end
    $var wire 13 ," r_total_i2[11] [12:0] $end
    $var wire 13 -" r_total_i2[12] [12:0] $end
    $var wire 13 ." g_total_i2[0] [12:0] $end
    $var wire 13 /" g_total_i2[1] [12:0] $end
    $var wire 13 0" g_total_i2[2] [12:0] $end
    $var wire 13 1" g_total_i2[3] [12:0] $end
    $var wire 13 2" g_total_i2[4] [12:0] $end
    $var wire 13 3" g_total_i2[5] [12:0] $end
    $var wire 13 4" g_total_i2[6] [12:0] $end
    $var wire 13 5" g_total_i2[7] [12:0] $end
    $var wire 13 6" g_total_i2[8] [12:0] $end
    $var wire 13 7" g_total_i2[9] [12:0] $end
    $var wire 13 8" g_total_i2[10] [12:0] $end
    $var wire 13 9" g_total_i2[11] [12:0] $end
    $var wire 13 :" g_total_i2[12] [12:0] $end
    $var wire 13 ;" b_total_i2[0] [12:0] $end
    $var wire 13 <" b_total_i2[1] [12:0] $end
    $var wire 13 =" b_total_i2[2] [12:0] $end
    $var wire 13 >" b_total_i2[3] [12:0] $end
    $var wire 13 ?" b_total_i2[4] [12:0] $end
    $var wire 13 @" b_total_i2[5] [12:0] $end
    $var wire 13 A" b_total_i2[6] [12:0] $end
    $var wire 13 B" b_total_i2[7] [12:0] $end
    $var wire 13 C" b_total_i2[8] [12:0] $end
    $var wire 13 D" b_total_i2[9] [12:0] $end
    $var wire 13 E" b_total_i2[10] [12:0] $end
    $var wire 13 F" b_total_i2[11] [12:0] $end
    $var wire 13 G" b_total_i2[12] [12:0] $end
    $var wire 14 H" r_total_i3[0] [13:0] $end
    $var wire 14 I" r_total_i3[1] [13:0] $end
    $var wire 14 J" r_total_i3[2] [13:0] $end
    $var wire 14 K" r_total_i3[3] [13:0] $end
    $var wire 14 L" r_total_i3[4] [13:0] $end
    $var wire 14 M" r_total_i3[5] [13:0] $end
    $var wire 14 N" r_total_i3[6] [13:0] $end
    $var wire 14 O" g_total_i3[0] [13:0] $end
    $var wire 14 P" g_total_i3[1] [13:0] $end
    $var wire 14 Q" g_total_i3[2] [13:0] $end
    $var wire 14 R" g_total_i3[3] [13:0] $end
    $var wire 14 S" g_total_i3[4] [13:0] $end
    $var wire 14 T" g_total_i3[5] [13:0] $end
    $var wire 14 U" g_total_i3[6] [13:0] $end
    $var wire 14 V" b_total_i3[0] [13:0] $end
    $var wire 14 W" b_total_i3[1] [13:0] $end
    $var wire 14 X" b_total_i3[2] [13:0] $end
    $var wire 14 Y" b_total_i3[3] [13:0] $end
    $var wire 14 Z" b_total_i3[4] [13:0] $end
    $var wire 14 [" b_total_i3[5] [13:0] $end
    $var wire 14 \" b_total_i3[6] [13:0] $end
    $var wire 15 ]" r_total_i4[0] [14:0] $end
    $var wire 15 ^" r_total_i4[1] [14:0] $end
    $var wire 15 _" r_total_i4[2] [14:0] $end
    $var wire 15 `" r_total_i4[3] [14:0] $end
    $var wire 15 a" g_total_i4[0] [14:0] $end
    $var wire 15 b" g_total_i4[1] [14:0] $end
    $var wire 15 c" g_total_i4[2] [14:0] $end
    $var wire 15 d" g_total_i4[3] [14:0] $end
    $var wire 15 e" b_total_i4[0] [14:0] $end
    $var wire 15 f" b_total_i4[1] [14:0] $end
    $var wire 15 g" b_total_i4[2] [14:0] $end
    $var wire 15 h" b_total_i4[3] [14:0] $end
    $var wire 16 i" r_total_i5[0] [15:0] $end
    $var wire 16 j" r_total_i5[1] [15:0] $end
    $var wire 16 k" r_total_i5[2] [15:0] $end
    $var wire 16 l" r_total_i5[3] [15:0] $end
    $var wire 16 m" g_total_i5[0] [15:0] $end
    $var wire 16 n" g_total_i5[1] [15:0] $end
    $var wire 16 o" g_total_i5[2] [15:0] $end
    $var wire 16 p" g_total_i5[3] [15:0] $end
    $var wire 16 q" b_total_i5[0] [15:0] $end
    $var wire 16 r" b_total_i5[1] [15:0] $end
    $var wire 16 s" b_total_i5[2] [15:0] $end
    $var wire 16 t" b_total_i5[3] [15:0] $end
    $var wire 17 u" r_total_f [16:0] $end
    $var wire 17 v" g_total_f [16:0] $end
    $var wire 17 w" b_total_f [16:0] $end
    $var wire 12 #% r_subtotals[0] [11:0] $end
    $var wire 12 $% r_subtotals[1] [11:0] $end
    $var wire 12 %% r_subtotals[2] [11:0] $end
    $var wire 12 &% r_subtotals[3] [11:0] $end
    $var wire 12 '% r_subtotals[4] [11:0] $end
    $var wire 12 (% g_subtotals[0] [11:0] $end
    $var wire 12 )% g_subtotals[1] [11:0] $end
    $var wire 12 *% g_subtotals[2] [11:0] $end
    $var wire 12 +% g_subtotals[3] [11:0] $end
    $var wire 12 ,% g_subtotals[4] [11:0] $end
    $var wire 12 -% b_subtotals[0] [11:0] $end
    $var wire 12 .% b_subtotals[1] [11:0] $end
    $var wire 12 /% b_subtotals[2] [11:0] $end
    $var wire 12 0% b_subtotals[3] [11:0] $end
    $var wire 12 1% b_subtotals[4] [11:0] $end
    $var wire 17 x" r_total [16:0] $end
    $var wire 17 y" g_total [16:0] $end
    $var wire 17 z" b_total [16:0] $end
    $var wire 13 {" r_norm [12:0] $end
    $var wire 13 |" g_norm [12:0] $end
    $var wire 13 }" b_norm [12:0] $end
    $var wire 4 ~" r_out [3:0] $end
    $var wire 4 !# g_out [3:0] $end
    $var wire 4 "# b_out [3:0] $end
    $scope module convolute_shift_register $end
     $scope module unnamedblk2 $end
      $var wire 32 ## i [31:0] $end
     $upscope $end
     $scope module unnamedblk3 $end
      $var wire 32 $# i [31:0] $end
     $upscope $end
     $scope module unnamedblk4 $end
      $var wire 32 %# i [31:0] $end
     $upscope $end
     $scope module unnamedblk5 $end
      $var wire 32 &# i [31:0] $end
     $upscope $end
     $scope module unnamedblk6 $end
      $var wire 32 '# i [31:0] $end
     $upscope $end
    $upscope $end
    $scope module unnamedblk1 $end
     $var wire 32 (# i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module dut_lcd_display $end
    $var wire 1 {# clk $end
    $var wire 1 ~# reset $end
    $var wire 3 )# filter_number [2:0] $end
    $var wire 1 *# address $end
    $var wire 1 +# chipselect $end
    $var wire 1 .$ byteenable $end
    $var wire 1 /$ read $end
    $var wire 1 ,# write $end
    $var wire 1 0$ waitrequest $end
    $var wire 8 1$ readdata [7:0] $end
    $var wire 2 2$ response [1:0] $end
    $var wire 8 -# writedata [7:0] $end
    $var wire 2 k# current_state [1:0] $end
    $var wire 2 l# next_state [1:0] $end
    $var wire 32 2% N_INSTRS [31:0] $end
    $var wire 9 m# instructions[0] [8:0] $end
    $var wire 9 n# instructions[1] [8:0] $end
    $var wire 9 o# instructions[2] [8:0] $end
    $var wire 9 p# instructions[3] [8:0] $end
    $var wire 9 q# instructions[4] [8:0] $end
    $var wire 9 r# instructions[5] [8:0] $end
    $var wire 9 s# instructions[6] [8:0] $end
    $var wire 9 t# instructions[7] [8:0] $end
    $var wire 9 u# instructions[8] [8:0] $end
    $var wire 9 v# instructions[9] [8:0] $end
    $var wire 32 w# next_instruction_index [31:0] $end
    $var wire 32 x# instruction_index [31:0] $end
   $upscope $end
   $scope module dut_pixel_filt $end
    $var wire 32 3$ W [31:0] $end
    $var wire 32 4$ W_FRAC [31:0] $end
    $var wire 1 {# clk $end
    $var wire 3 )# filter_number [2:0] $end
    $var wire 16 !$ audio_pitch [15:0] $end
    $var wire 6 H# r_mod [5:0] $end
    $var wire 6 I# g_mod [5:0] $end
    $var wire 6 J# b_mod [5:0] $end
    $var wire 1 G# div_flag $end
    $var wire 3 y# range [2:0] $end
    $var wire 6 H# temp_r_mod [5:0] $end
    $var wire 6 I# temp_g_mod [5:0] $end
    $var wire 6 J# temp_b_mod [5:0] $end
    $var wire 1 G# temp_div_flag $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000 #
1$
0%
b0000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b0000000000000000 +
b0000000 ,
b0000000 -
b0000000 .
b0000000 /
b0000000 0
b0000000 1
b0000000 2
b0000000 3
b0000000 4
b0000000 5
b0000000 6
b0000000 7
b0000000 8
b0000000 9
b0000000 :
b0000000 ;
b0000000 <
b0000000 =
b0000000 >
b0000000 ?
b0000000 @
b0000000 A
b0000000 B
b0000000 C
b0000000 D
b000000000000 E
b000000000000 F
b00000 G
b00000 H
b00000 I
b00000 J
b00000 K
b00000 L
b00000 M
b00000 N
b00000 O
b00000 P
b00000 Q
b00000 R
b00000 S
b00000 T
b00000 U
b00000 V
b00000 W
b00000 X
b00000 Y
b00000 Z
b00000 [
b00000 \
b00000 ]
b00000 ^
b00000 _
b00000 `
b00000 a
b00000 b
b00000 c
b00000 d
b00000 e
b00000 f
b00000 g
b00000 h
b00000 i
b00000 j
b00000 k
b00000 l
b00000 m
b00000 n
b00000 o
b00000 p
b00000 q
b00000 r
b00000 s
b00000 t
b00000 u
b00000 v
b00000 w
b00000 x
b00000 y
b00000 z
b00000 {
b00000 |
b00000 }
b00000 ~
b00000 !!
b00000 "!
b00000 #!
b00000 $!
b00000 %!
b00000 &!
b00000 '!
b00000 (!
b00000 )!
b00000 *!
b00000 +!
b00000 ,!
b00000 -!
b00000 .!
b00000 /!
b00000 0!
b00000 1!
b00000 2!
b00000 3!
b000000000000 4!
b000000000000 5!
b000000000000 6!
b000000000000 7!
b000000000000 8!
b000000000000 9!
b000000000000 :!
b000000000000 ;!
b000000000000 <!
b000000000000 =!
b000000000000 >!
b000000000000 ?!
b000000000000 @!
b000000000000 A!
b000000000000 B!
b000000000000 C!
b000000000000 D!
b000000000000 E!
b000000000000 F!
b000000000000 G!
b000000000000 H!
b000000000000 I!
b000000000000 J!
b000000000000 K!
b000000000000 L!
b000000000000 M!
b000000000000 N!
b000000000000 O!
b000000000000 P!
b000000000000 Q!
b000000000000 R!
b000000000000 S!
b000000000000 T!
b000000000000 U!
b000000000000 V!
b000000000000 W!
b000000000000 X!
b000000000000 Y!
b000000000000 Z!
b000000000000 [!
b000000000000 \!
b000000000000 ]!
b000000000000 ^!
b000000000000 _!
b000000000000 `!
b000000000000 a!
b000000000000 b!
b000000000000 c!
b000000000000 d!
b000000000000 e!
b000000000000 f!
b000000000000 g!
b000000000000 h!
b000000000000 i!
b000000000000 j!
b000000000000 k!
b000000000000 l!
b000000000000 m!
b000000000000 n!
b000000000000 o!
b000000000000 p!
b000000000000 q!
b000000000000 r!
b000000000000 s!
b000000000000 t!
b000000000000 u!
b000000000000 v!
b000000000000 w!
b000000000000 x!
b000000000000 y!
b000000000000 z!
b000000000000 {!
b000000000000 |!
b000000000000 }!
b000000000000 ~!
b0000000000000 !"
b0000000000000 ""
b0000000000000 #"
b0000000000000 $"
b0000000000000 %"
b0000000000000 &"
b0000000000000 '"
b0000000000000 ("
b0000000000000 )"
b0000000000000 *"
b0000000000000 +"
b0000000000000 ,"
b0000000000000 -"
b0000000000000 ."
b0000000000000 /"
b0000000000000 0"
b0000000000000 1"
b0000000000000 2"
b0000000000000 3"
b0000000000000 4"
b0000000000000 5"
b0000000000000 6"
b0000000000000 7"
b0000000000000 8"
b0000000000000 9"
b0000000000000 :"
b0000000000000 ;"
b0000000000000 <"
b0000000000000 ="
b0000000000000 >"
b0000000000000 ?"
b0000000000000 @"
b0000000000000 A"
b0000000000000 B"
b0000000000000 C"
b0000000000000 D"
b0000000000000 E"
b0000000000000 F"
b0000000000000 G"
b00000000000000 H"
b00000000000000 I"
b00000000000000 J"
b00000000000000 K"
b00000000000000 L"
b00000000000000 M"
b00000000000000 N"
b00000000000000 O"
b00000000000000 P"
b00000000000000 Q"
b00000000000000 R"
b00000000000000 S"
b00000000000000 T"
b00000000000000 U"
b00000000000000 V"
b00000000000000 W"
b00000000000000 X"
b00000000000000 Y"
b00000000000000 Z"
b00000000000000 ["
b00000000000000 \"
b000000000000000 ]"
b000000000000000 ^"
b000000000000000 _"
b000000000000000 `"
b000000000000000 a"
b000000000000000 b"
b000000000000000 c"
b000000000000000 d"
b000000000000000 e"
b000000000000000 f"
b000000000000000 g"
b000000000000000 h"
b0000000000000000 i"
b0000000000000000 j"
b0000000000000000 k"
b0000000000000000 l"
b0000000000000000 m"
b0000000000000000 n"
b0000000000000000 o"
b0000000000000000 p"
b0000000000000000 q"
b0000000000000000 r"
b0000000000000000 s"
b0000000000000000 t"
b00000000000000000 u"
b00000000000000000 v"
b00000000000000000 w"
b00000000000000000 x"
b00000000000000000 y"
b00000000000000000 z"
b0000000000000 {"
b0000000000000 |"
b0000000000000 }"
b0000 ~"
b0000 !#
b0000 "#
b00000000000000000000000000000000 ##
b00000000000000000000000000000000 $#
b00000000000000000000000000000000 %#
b00000000000000000000000000000000 &#
b00000000000000000000000000000000 '#
b00000000000000000000000000000000 (#
b000 )#
0*#
0+#
0,#
b00000000 -#
b0000000 .#
b0000000 /#
b0000000 0#
b0000000 1#
b0000000 2#
b0000000 3#
b0000000 4#
b0000000 5#
b0000000 6#
b0000000 7#
b0000000 8#
b0000000 9#
b0000000 :#
b0000000 ;#
b0000000 <#
b0000000 =#
b0000000 >#
b0000000 ?#
b0000000 @#
b0000000 A#
b0000000 B#
b0000000 C#
b0000000 D#
b0000000 E#
b0000000 F#
0G#
b000000 H#
b000000 I#
b000000 J#
b000 K#
b0000000 L#
b0000000 M#
b0000000 N#
b0000000 O#
b0000000 P#
b0000000 Q#
b0000000 R#
b0000000 S#
b0000000 T#
b0000000 U#
b0000000 V#
b0000000 W#
b0000000 X#
b0000000 Y#
b0000000 Z#
b0000000 [#
b0000000 \#
b0000000 ]#
b0000000 ^#
b0000000 _#
b0000000 `#
b0000000 a#
b0000000 b#
b0000000 c#
b0000000 d#
b00000000000000000000000000000000 e#
b00000000000000000000000000000000 f#
b00000000000000000000000000000000 g#
0h#
0i#
b0000 j#
b00 k#
b01 l#
b000000001 m#
b101000110 n#
b101101001 o#
b101101100 p#
b101110100 q#
b101100101 r#
b101110010 s#
b100111010 t#
b100100000 u#
b100100011 v#
b00000000000000000000000000000001 w#
b00000000000000000000000000000000 x#
b000 y#
0z#
0{#
1|#
0}#
1~#
b0000000000000000 !$
1"$
0#$
b0001 $$
b00000000000000000000000000000101 %$
b00000000000000000000000101000000 &$
b00000000000000000000000011110000 '$
b00000000000000000000000000001100 ($
b00000000000000000000000000001000 )$
b00000000000000000000000000010001 *$
0+$
0,$
b000000000000 -$
1.$
0/$
00$
b00000000 1$
b00 2$
b00000000000000000000000000000110 3$
b00000000000000000000000000000011 4$
b00000000000000000000000000011001 5$
b000000000000 6$
b000000000000 7$
b000000000000 8$
b000000000000 9$
b000000000000 :$
b000000000000 ;$
b000000000000 <$
b000000000000 =$
b000000000000 >$
b000000000000 ?$
b000000000000 @$
b000000000000 A$
b000000000000 B$
b000000000000 C$
b000000000000 D$
b000000000000 E$
b000000000000 F$
b000000000000 G$
b000000000000 H$
b000000000000 I$
b000000000000 J$
b000000000000 K$
b000000000000 L$
b000000000000 M$
b000000000000 N$
b000000000000 O$
b000000000000 P$
b000000000000 Q$
b000000000000 R$
b000000000000 S$
b000000000000 T$
b000000000000 U$
b000000000000 V$
b000000000000 W$
b000000000000 X$
b000000000000 Y$
b000000000000 Z$
b000000000000 [$
b000000000000 \$
b000000000000 ]$
b000000000000 ^$
b000000000000 _$
b000000000000 `$
b000000000000 a$
b000000000000 b$
b000000000000 c$
b000000000000 d$
b000000000000 e$
b000000000000 f$
b000000000000 g$
b000000000000 h$
b000000000000 i$
b000000000000 j$
b000000000000 k$
b000000000000 l$
b000000000000 m$
b000000000000 n$
b000000000000 o$
b000000000000 p$
b000000000000 q$
b000000000000 r$
b000000000000 s$
b000000000000 t$
b000000000000 u$
b000000000000 v$
b000000000000 w$
b000000000000 x$
b000000000000 y$
b000000000000 z$
b000000000000 {$
b000000000000 |$
b000000000000 }$
b000000000000 ~$
b000000000000 !%
b000000000000 "%
b000000000000 #%
b000000000000 $%
b000000000000 %%
b000000000000 &%
b000000000000 '%
b000000000000 (%
b000000000000 )%
b000000000000 *%
b000000000000 +%
b000000000000 ,%
b000000000000 -%
b000000000000 .%
b000000000000 /%
b000000000000 0%
b000000000000 1%
b00000000000000000000000000001010 2%
b000000001 3%
b000000010 4%
b000000110 5%
b000000100 6%
b000000101 7%
b000001100 8%
b000001110 9%
b000001111 :%
b000001000 ;%
b000011100 <%
b000011000 =%
b000010100 >%
b000010000 ?%
#20
b00000000000000000000000000011001 (#
1z#
0|#
0~#
0"$
b0000 $$
