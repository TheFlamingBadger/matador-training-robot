|top_level
CLOCK_50 => CLOCK_50.IN3
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[35] <> GPIO[35]
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => _.IN1
KEY[3] => ~NO_FANOUT~
LEDR[0] <= sensor_driver:u0.distance
LEDR[1] <= sensor_driver:u0.distance
LEDR[2] <= sensor_driver:u0.distance
LEDR[3] <= sensor_driver:u0.distance
LEDR[4] <= sensor_driver:u0.distance
LEDR[5] <= sensor_driver:u0.distance
LEDR[6] <= sensor_driver:u0.distance
LEDR[7] <= sensor_driver:u0.distance


|top_level|debounce:reset_edge
clk => button_q0.CLK
clk => button_pressed.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => new_button_pressed.CLK
button => always0.IN1
button => new_button_pressed.DATAIN
button_edge <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|top_level|PLL:init_PLL
areset => areset.IN1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|top_level|PLL:init_PLL|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= PLL_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top_level|PLL:init_PLL|altpll:altpll_component|PLL_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|top_level|sensor_driver:u0
clk => distanceRAW_in_cm[24].CLK
clk => distanceRAW_in_cm[25].CLK
clk => distanceRAW_in_cm[26].CLK
clk => distanceRAW_in_cm[27].CLK
clk => distanceRAW_in_cm[28].CLK
clk => distanceRAW_in_cm[29].CLK
clk => distanceRAW_in_cm[30].CLK
clk => distanceRAW_in_cm[31].CLK
clk => distanceRAW[0].CLK
clk => distanceRAW[1].CLK
clk => distanceRAW[2].CLK
clk => distanceRAW[3].CLK
clk => distanceRAW[4].CLK
clk => distanceRAW[5].CLK
clk => distanceRAW[6].CLK
clk => distanceRAW[7].CLK
clk => distanceRAW[8].CLK
clk => distanceRAW[9].CLK
clk => distanceRAW[10].CLK
clk => distanceRAW[11].CLK
clk => distanceRAW[12].CLK
clk => distanceRAW[13].CLK
clk => distanceRAW[14].CLK
clk => distanceRAW[15].CLK
clk => distanceRAW[16].CLK
clk => distanceRAW[17].CLK
clk => distanceRAW[18].CLK
clk => distanceRAW[19].CLK
clk => distanceRAW[20].CLK
clk => distanceRAW[21].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => state~1.DATAIN
rst => state~3.DATAIN
measure => state.IN1
echo => Selector3.IN1
echo => Selector2.IN1
echo => state.DATAB
trig <= inTRIGGER.DB_MAX_OUTPUT_PORT_TYPE
distance[0] <= distanceRAW_in_cm[24].DB_MAX_OUTPUT_PORT_TYPE
distance[1] <= distanceRAW_in_cm[25].DB_MAX_OUTPUT_PORT_TYPE
distance[2] <= distanceRAW_in_cm[26].DB_MAX_OUTPUT_PORT_TYPE
distance[3] <= distanceRAW_in_cm[27].DB_MAX_OUTPUT_PORT_TYPE
distance[4] <= distanceRAW_in_cm[28].DB_MAX_OUTPUT_PORT_TYPE
distance[5] <= distanceRAW_in_cm[29].DB_MAX_OUTPUT_PORT_TYPE
distance[6] <= distanceRAW_in_cm[30].DB_MAX_OUTPUT_PORT_TYPE
distance[7] <= distanceRAW_in_cm[31].DB_MAX_OUTPUT_PORT_TYPE


